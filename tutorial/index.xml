<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cybertraining â€“ Tutorials</title><link>/tutorial/</link><description>Recent content in Tutorials on Cybertraining</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorial: Git pull requst</title><link>/tutorial/git-pull-request/</link><pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate><guid>/tutorial/git-pull-request/</guid><description>
&lt;img src="/tutorial/git-pull-request/featured-image_hu1e98c14e7ef5c047e5e9948283a69421_148226_640x0_resize_catmullrom_2.png" width="640" height="412"/>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>It is very easy to help us modifying the Web Site through GitHub pull requests. We demonstrate this via the commandline and via the GitHub GUI.&lt;/p>
&lt;p>The commandline can be run form any computer with Linux, Windows, and macOS. ON Windows you need to install gitbash and use that. THis way you have a commandline terminal that just works like on LInux and OSX.&lt;/p>
&lt;/div>
&lt;h2 id="github-pull-request-via-the-commandline">Github Pull Request via the commandline&lt;/h2>
&lt;p>9:15 min&lt;/p>
&lt;div width=100px>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/F369RBlL33A" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/div>
&lt;h2 id="github-pull-request-via-the-github-gui">Github Pull Request via the GitHub GUI&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/eU3jOuM7OQc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Tutorial: 10 minus 5 Monitoring tools for your Nvidia GPUs on Ubuntu 20.04 LTS</title><link>/tutorial/gpu/nvidia-monitoring/</link><pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate><guid>/tutorial/gpu/nvidia-monitoring/</guid><description>
&lt;h2 id="1-introduction">1. Introduction&lt;/h2>
&lt;p>So you have installed your long-awaited graphics card from NVIDIA and
like to observe its utilization. You may be familiar with nvidia-smi,
but there is more to this tool as you may know. We will provide you
with some examples of what you can do with it. Furthermore, we will
showcase several tools that allow you to monitor the card(s) as
they provide more sophisticated visualizations. We present graphics
and terminal commands. The reason why terminal commands are so popular
is that they can be called in containers, but also through simple
remote shell invocations where it may be inconvenient to use a GUI.&lt;/p>
&lt;p>Although we started with the hope that all of them are easy to
install, we found out that only five of the 10 did install without
issues. We found especially a lack of documentation on the other tools
to make them work. Naturally, we have other things to do as likely you,
so we did not spend any time trying to fix the things. Instead, we
moved on and looked at other tools that are easier to install and work.&lt;/p>
&lt;p>We hope with our review we safe you time.&lt;/p>
&lt;h2 id="2-preface">2. Preface&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Notation:&lt;/strong> We use in the document some commands issued on the
terminal, and prepend them with a &amp;lsquo;$&amp;rsquo; to easily distinguish them
from other text.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Operating system:&lt;/strong> We restricted this review to tools that are
available on Ubuntu as this is what we use to interact with the
cards. Several tools also exist for windows, but this may be a
topic for another day.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="3-python3-venv">3. Python3 venv&lt;/h2>
&lt;p>Some of the tools come as python packages and in order not to effect
your default python installation we recommend using a python virtual
environment. We use in our virtual environment python 3.9. To do so
make sure you have python 3.9 installed, which you can obtain in
various ways.&lt;/p>
&lt;p>Then create and source it and you should be ready to go after
you execute the following commands:&lt;/p>
&lt;pre>&lt;code>$ python3 -m venv ~/ENV3
$ source ~/ENV3/bin/activate
$ pip install pip -U
&lt;/code>&lt;/pre>&lt;p>To permanently add it to your startup, please add the line:&lt;/p>
&lt;pre>&lt;code>source ~/ENV3/bin/activate
&lt;/code>&lt;/pre>&lt;p>to your &lt;code>.bash_profile&lt;/code> file&lt;/p>
&lt;h2 id="4-the-tools-to-monitor-your-nvidia-cards">4. The tools to monitor your NVIDIA Cards&lt;/h2>
&lt;h3 id="41-nvidia-smi">4.1 nvidia-smi&lt;/h3>
&lt;p>After you installed the Nvidia drivers and programs you will find a
program called &lt;code>nvidia-smi&lt;/code>. You simply can call it with&lt;/p>
&lt;pre>&lt;code>$ nvidia-smi
&lt;/code>&lt;/pre>&lt;p>This gives you the current status of the cards.&lt;/p>
&lt;pre>&lt;code>+-----------------------------------------------------------------------------+
| NVIDIA-SMI 460.73.01 Driver Version: 460.73.01 CUDA Version: 11.2 |
|-------------------------------+----------------------+----------------------+
| GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC |
| Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. |
| | | MIG M. |
|===============================+======================+======================|
| 0 GeForce RTX 3090 On | 00000000:0B:00.0 On | N/A |
| 32% 27C P8 15W / 350W | 618MiB / 24234MiB | 1% Default |
| | | N/A |
+-------------------------------+----------------------+----------------------+
+-----------------------------------------------------------------------------+
| Processes: |
| GPU GI CI PID Type Process name GPU Memory |
| ID ID Usage |
|=============================================================================|
| 0 N/A N/A 1544 G /usr/lib/xorg/Xorg 102MiB |
| 0 N/A N/A 2663 G /usr/lib/xorg/Xorg 387MiB |
| 0 N/A N/A 2797 G /usr/bin/gnome-shell 89MiB |
| 0 N/A N/A 4866 G /usr/lib/firefox/firefox 4MiB |
| 0 N/A N/A 7884 G /usr/lib/firefox/firefox 4MiB |
| 0 N/A N/A 8939 G /usr/lib/firefox/firefox 4MiB |
| 0 N/A N/A 10674 G /usr/lib/firefox/firefox 4MiB |
| 0 N/A N/A 11148 G /usr/lib/firefox/firefox 4MiB |
+-----------------------------------------------------------------------------+
&lt;/code>&lt;/pre>&lt;p>To get a repeated update
you can use the command&lt;/p>
&lt;pre>&lt;code>$ nvidia-smi -l 1
&lt;/code>&lt;/pre>&lt;p>where the parameter after the &lt;code>-l&lt;/code> specifies the time in seconds between
updates. However it to avoid past traces to be showing up in your
command history, you can also use&lt;/p>
&lt;pre>&lt;code>$ watch -n 1 nvidia-smi
&lt;/code>&lt;/pre>&lt;p>which we prefer. Unkown to some users I spoke to they did not know
that this command comes with a lot of features you can access from the
command line to customize your query. To find out more about it use the
commands&lt;/p>
&lt;pre>&lt;code>$ nvidia-smi --help-query-compute-apps
&lt;/code>&lt;/pre>&lt;p>and&lt;/p>
&lt;pre>&lt;code>$ nvidia-smi --help
&lt;/code>&lt;/pre>&lt;p>to get inspired. Here is for example a command that returns the
content of a specific query of selected attributes in csv format for
further processing.&lt;/p>
&lt;p>Examples are:&lt;/p>
&lt;pre>&lt;code>$nvidia-smi --query-gpu=timestamp,temperature.gpu --format=csv
timestamp, temperature.gpu
2021/05/30 10:39:37.436, 26
&lt;/code>&lt;/pre>&lt;pre>&lt;code>$ nvidia-smi --query-gpu=name,index,temperature.gpu,utilization.gpu,utilization.memory,memory.total,memory.free,memory.used --format=csv,noheader,nounits
GeForce RTX 3090, 0, 30, 0, 0, 24234, 23512, 722
&lt;/code>&lt;/pre>&lt;h3 id="42-gpustat">4.2 gpustat&lt;/h3>
&lt;p>&lt;a href="https://github.com/wookayin/gpustat">gpustat&lt;/a> is a minimal terminal command that lists a subset of nvidia-smi.&lt;/p>
&lt;p>It is easily installable with&lt;/p>
&lt;pre>&lt;code>$ pip install gpustat
&lt;/code>&lt;/pre>&lt;p>you can call it repeatedly with&lt;/p>
&lt;pre>&lt;code>gpustat -cp --watch
&lt;/code>&lt;/pre>&lt;p>or&lt;/p>
&lt;pre>&lt;code>watch -n 1 -c gpustat -cp --color
&lt;/code>&lt;/pre>&lt;p>To see more options use&lt;/p>
&lt;pre>&lt;code>gpustat -h
&lt;/code>&lt;/pre>&lt;p>The output looks similar to&lt;/p>
&lt;pre>&lt;code>hostname Sun May 30 12:29:59 2021 460.73.01
[0] GeForce RTX 3090 | 27'C, 1 % | 659 / 24234 MB | gdm(102M) username(413M) ...
&lt;/code>&lt;/pre>&lt;h3 id="43-nvtop">4.3 nvtop&lt;/h3>
&lt;p>&lt;a href="https://github.com/Syllo/nvtop">nvtop&lt;/a> is a top-like task monitor for NVIDIA GPUs. It can handle multiple GPUs.&lt;/p>
&lt;p>Nvtop could not be installed via pip install as it uses an outdated
Nvidia library by default. Hence it is best to install it from the
source as follows:&lt;/p>
&lt;pre>&lt;code>$ git clone https://github.com/Syllo/nvtop.git
$ mkdir -p nvtop/build &amp;amp;&amp;amp; cd nvtop/build
$ cmake ..
$ make
$ sudo make install
&lt;/code>&lt;/pre>&lt;p>Now run it with&lt;/p>
&lt;pre>&lt;code>$ nvtop
&lt;/code>&lt;/pre>&lt;p>The output looks like&lt;/p>
&lt;p>&lt;img src="https://github.com/cybertraining-dsc/cybertraining-dsc.github.io/raw/main/content/en/tutorial/gpu/nvtop.png" alt="Figure: Nvtop Screenshot">&lt;/p>
&lt;p>Figure: Nvtop Screenshot&lt;/p>
&lt;h3 id="44-gmonitor">4.4 gmonitor&lt;/h3>
&lt;p>&lt;a href="https://github.com/mountassir/gmonitor">gmonitor&lt;/a> is a simple GPU monitoring program for monitoring core usage, VRAM usage, PCI-E and memory bus usage, and the temperature of the GPU.&lt;/p>
&lt;p>It is easy to install with&lt;/p>
&lt;pre>&lt;code>clone https://github.com/mountassir/gmonitor.git
cd gmonitor/
mkdir build
cd build
cmake ..
make
sudo make install
&lt;/code>&lt;/pre>&lt;p>you start it with&lt;/p>
&lt;pre>&lt;code>gmonitor
&lt;/code>&lt;/pre>&lt;p>It looks as shown in the next figure.&lt;/p>
&lt;p>&lt;img src="https://github.com/cybertraining-dsc/cybertraining-dsc.github.io/raw/main/content/en/tutorial/gpu/gmonitor.png" alt="Figure: gmonitor">&lt;/p>
&lt;p>Figure: gmonitor&lt;/p>
&lt;h3 id="45-glances">4.5 glances&lt;/h3>
&lt;p>&lt;a href="https://nicolargo.github.io/glances/">Glances&lt;/a> is a top-like tool that reports on many different aspects of the system and not just GPUs. The tool is easy to install with&lt;/p>
&lt;pre>&lt;code>pip install py3nvml
sudo pip install glances[gpu]
&lt;/code>&lt;/pre>&lt;p>You can start it with&lt;/p>
&lt;pre>&lt;code>$ glances
&lt;/code>&lt;/pre>&lt;p>However, if you use a white background use&lt;/p>
&lt;pre>&lt;code>$ glances --theme-white
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://github.com/cybertraining-dsc/cybertraining-dsc.github.io/raw/main/content/en/tutorial/gpu/glances.png" alt="Figure: Glances Screenshot">&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note: All other tools listed here had installation issues. However, we did not
spend time to debug them as any of the previous tools seem
sufficient. However, some of the best looking GUI tools are in the list
that did not install easily.&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h3 id="46-install-issues-nvidia-system-monitor">4.6 Install Issues: nvidia-system-monitor&lt;/h3>
&lt;p>As we have not installed qt we were suspicious about if this install
would even work. Unfortunately, the documentation does not provide
enough information on how to install qt. and make it work. The Web
page for the tool is located at&lt;/p>
&lt;p>&lt;a href="https://github.com/congard/nvidia-system-monitor-qt">nvidia-system-monitor&lt;/a>&lt;/p>
&lt;p>It seems to be complex to install qt for free on a system, thus we
have not followed up on this any further.&lt;/p>
&lt;h3 id="47-install-issues-nvgpu">4.7 Install Issues: nvgpu&lt;/h3>
&lt;p>The Web page is located at &lt;a href="https://pypi.org/project/nvgpu/">Nvgpu&lt;/a>&lt;/p>
&lt;p>This module could not be easily installed even though we installed&lt;/p>
&lt;pre>&lt;code>sudo apt-get install liblzma-dev
sudo apt-get install liblzma
pip install -U nvgpu
nvgpu available
&lt;/code>&lt;/pre>&lt;p>it returns&lt;/p>
&lt;pre>&lt;code>/home/USER/ENV3/lib/python3.9/site-packages/pandas/compat/__init__.py:97: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
&lt;/code>&lt;/pre>&lt;h3 id="48-install-issues-nvitop">4.8 Install Issues: nvitop&lt;/h3>
&lt;p>&lt;a href="https://github.com/XuehaiPan/nvitop">nvitop&lt;/a> is Aa interactive
NVIDIA-GPU process viewer, the one-stop solution for GPU process
management. However, it is not installable on my system via pip
install, not via compilation from the source.&lt;/p>
&lt;p>The information on the Web site on how to fix the dependency on
&lt;code>nvidia-ml-py==11.450.51&lt;/code> and how to fix it could be better described&lt;/p>
&lt;h3 id="49-install-issues-greenwithenvy">4.9 Install Issues: GreenWithEnvy&lt;/h3>
&lt;p>&lt;a href="https://flathub.org/apps/details/com.leinardi.gwe">GreenWithEnvy&lt;/a> is
a great-looking application, however, also its install is not possible
on my system as it fails with an install issue of pycairo. The ode is
available on &lt;a href="https://gitlab.com/leinardi/gwe">GitLab&lt;/a>&lt;/p>
&lt;h3 id="410-install-issues-pgme">4.10 Install Issues: pgme&lt;/h3>
&lt;p>The tool &lt;a href="https://github.com/chhibber/pgme">pgme&lt;/a> could not be
installed on Linux as its instructions were incomplete and did not work
even after installation of go with&lt;/p>
&lt;pre>&lt;code>sudo snap install go --classic
&lt;/code>&lt;/pre>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>We have shown you several tools for monitoring your GPUs. We found
that these tools are incredibly useful to make sure your system
operates properly. This is especially the case for showing workloads
and temperatures, as well as the available software versions to
interact with the cards.&lt;/p>
&lt;p>Which one of the tools you like maybe a personal choice. Although
&lt;code>nvidia-smi&lt;/code> is the go-to tool, others provide quite good insights
while visualizing historical trends enhancing the experience when you
for example, run workloads over time.&lt;/p>
&lt;p>We naturally like nvidia-sm as it simply works and you can customize
its output, while repeatedly displaying its values with &lt;code>watch&lt;/code>.&lt;/p>
&lt;p>Form tho other tools we liked &lt;code>nvtop&lt;/code> do its graphical history,
&amp;lsquo;gmonitor&lt;code>for displaying the values in a diagram, and&lt;/code>glances&lt;code>for more then GPU information. If you are really tight in space,&lt;/code>gpustat`
may be for you. All other tools could unfortunately not easily be
installed.&lt;/p>
&lt;p>Please leave us a note about which tools you prefer and let us know
about tools that we have not listed here. Make sure they can easily be
installed. If you have better instructions on how to install the tools
with issues on Ubuntu 20.04 LTS please comment or provide us a
pointer. We will then try it out and update this post.&lt;/p></description></item><item><title>Tutorial: Using Shell.download to Download Files</title><link>/tutorial/cms-shell-download/</link><pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate><guid>/tutorial/cms-shell-download/</guid><description>
&lt;img src="/tutorial/cms-shell-download/featured-image_hu31ad1de8477c329f5412ff59acdd044d_22590_640x0_resize_catmullrom_2.png" width="640" height="369"/>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 610px">
&lt;img class="card-img-top" src="/tutorial/cms-shell-download/featured-image_hu31ad1de8477c329f5412ff59acdd044d_22590_600x300_fill_catmullrom_smart1_2.png" width="600" height="300">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;/p>
&lt;/div>
&lt;/div>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;strong>Learning Objectives&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Install &lt;code>cloudmesh.common&lt;/code>&lt;/li>
&lt;li>Use &lt;code>Shell.download&lt;/code> from &lt;code>cloudmesh-common&lt;/code> to download files from the internet.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Requirements&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>python3 --version&lt;/code> &amp;gt; 3.8&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Topics covered&lt;/strong>&lt;/p>
&lt;div class="toc">
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#python-3-venv">Python 3 &lt;code>venv&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#installation-of-cloudmeshcommn">Installation of &lt;code>cloudmesh.commn&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#usage-of-shelldownload">Usage of &lt;code>Shell.download&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#configuring-the-download-cache">Configuring the Download Cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="#different-providers-for-shelldownload">Different Providers for &lt;code>Shell.download&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#installing-other-download-programs">Installing other Download Programs&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/div>
&lt;/div>
&lt;h2 id="python-3-venv">Python 3 &lt;code>venv&lt;/code>&lt;/h2>
&lt;p>Best practice is to use a venv in python to isolate your custom python instalation:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ python3 -m venv ~/ENV3
$ &lt;span style="color:#204a87">source&lt;/span> ~/ENV3/bin/activate
&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ~/ENV3/Scripts/activate.exe
&lt;/code>&lt;/pre>&lt;/div>&lt;p>in Windows &lt;code>gitbash&lt;/code>.&lt;/p>
&lt;h2 id="installation-of-cloudmeshcommn">Installation of &lt;code>cloudmesh.commn&lt;/code>&lt;/h2>
&lt;p>Install &lt;code>cloudmesh-common&lt;/code> with:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">pip install -U pip
pip install cloudmesh-common
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage-of-shelldownload">Usage of &lt;code>Shell.download&lt;/code>&lt;/h2>
&lt;p>&lt;code>Shell.download&lt;/code> leverages the streaming capabilities of the &lt;code>requests&lt;/code> library for large files.&lt;/p>
&lt;p>Example download of image where underlying downloader is &lt;code>requests&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#a40000">$&lt;/span> &lt;span style="color:#000">python3&lt;/span>
&lt;span style="color:#000">Python&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3.9&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">v3&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">9.4&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000">f2e3088f3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Apr&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2021&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">12&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">32&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">44&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">Clang&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">6.0&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">clang&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">600.0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">57&lt;/span>&lt;span style="color:#000;font-weight:bold">)]&lt;/span> &lt;span style="color:#000">on&lt;/span> &lt;span style="color:#000">darwin&lt;/span>
&lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;help&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;copyright&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;credits&amp;#34;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">or&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;license&amp;#34;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">more&lt;/span> &lt;span style="color:#000">information&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">cloudmesh.common.Shell&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">Shell&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">file_url&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;https://github.com/cloudmesh/pi/blob/main/content/en/tutorial/example/featured-image.png?raw=true&amp;#39;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">destination&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;~/Desktop/image.png&amp;#39;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">Shell&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">download&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">file_url&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">destination&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">users&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">you&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">Desktop&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">image&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">png&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">%|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">#########| 22.6k/22.6k [00:00&amp;lt;00:00, 3.58MB/s]&lt;/span>
&lt;span style="color:#4e9a06">&amp;#39;/users/you/Desktop/image.png&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuring-the-download-cache">Configuring the Download Cache&lt;/h2>
&lt;p>&lt;code>Shell.download&lt;/code> only downloads if the filename in the destination does not
already exist. If you like to change the behavior and ignore it, you need to use
the &lt;code>force&lt;/code> parameter.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">Shell&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">download&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">file_url&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">destination&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">force&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#3465a4">True&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="different-providers-for-shelldownload">Different Providers for &lt;code>Shell.download&lt;/code>&lt;/h2>
&lt;p>Example where provider is &lt;code>system&lt;/code>. Cloudmesh &lt;code>Shell&lt;/code> will first try to use
&lt;code>wget&lt;/code> then &lt;code>curl&lt;/code> (if &lt;code>wget&lt;/code> fails)&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#a40000">$&lt;/span> &lt;span style="color:#000">python3&lt;/span>
&lt;span style="color:#000">Python&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3.9&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">v3&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">9.4&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000">f2e3088f3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Apr&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2021&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">12&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">32&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">44&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">Clang&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">6.0&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">clang&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">600.0&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">57&lt;/span>&lt;span style="color:#000;font-weight:bold">)]&lt;/span> &lt;span style="color:#000">on&lt;/span> &lt;span style="color:#000">darwin&lt;/span>
&lt;span style="color:#000">Type&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;help&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;copyright&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;credits&amp;#34;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">or&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;license&amp;#34;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">more&lt;/span> &lt;span style="color:#000">information&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">cloudmesh.common.Shell&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">Shell&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">file_url&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;https://github.com/cloudmesh/pi/blob/main/content/en/tutorial/example/featured-image.png?raw=true&amp;#39;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">destination&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;~/Desktop/image.png&amp;#39;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#000">Shell&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">download&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">file_url&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">destination&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">provider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;system&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">sh&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">wget&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">command&lt;/span> &lt;span style="color:#204a87;font-weight:bold">not&lt;/span> &lt;span style="color:#000">found&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">%&lt;/span> &lt;span style="color:#000">Total&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">%&lt;/span> &lt;span style="color:#000">Received&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">%&lt;/span> &lt;span style="color:#000">Xferd&lt;/span> &lt;span style="color:#000">Average&lt;/span> &lt;span style="color:#000">Speed&lt;/span> &lt;span style="color:#000">Time&lt;/span> &lt;span style="color:#000">Time&lt;/span> &lt;span style="color:#000">Time&lt;/span> &lt;span style="color:#000">Current&lt;/span>
&lt;span style="color:#000">Dload&lt;/span> &lt;span style="color:#000">Upload&lt;/span> &lt;span style="color:#000">Total&lt;/span> &lt;span style="color:#000">Spent&lt;/span> &lt;span style="color:#000">Left&lt;/span> &lt;span style="color:#000">Speed&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">153&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">153&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">467&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">467&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">164&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">164&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">379&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">379&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">22590&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">22590&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">43694&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">43694&lt;/span>
&lt;span style="color:#000">INFO&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">Used&lt;/span> &lt;span style="color:#000">curl&lt;/span>
&lt;span style="color:#4e9a06">&amp;#39;/users/you/Desktop/image.png&amp;#39;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can see here that &lt;code>Shell.download&lt;/code> uses &lt;code>curl&lt;/code> and not &lt;code>wget&lt;/code>. This is
because the example system did not have &lt;code>wget&lt;/code> as a
terminal (&lt;code>'system'&lt;/code>) command installed.&lt;/p>
&lt;h2 id="installing-other-download-programs">Installing other Download Programs&lt;/h2>
&lt;p>Your OS typically has defined mechanisms to install commands such as &lt;code>curl&lt;/code> and &lt;code>wget&lt;/code>.
If they are not installed. Shell.download will use Python requests automatically.
If you like to use wget r curl you need to install them.&lt;/p>
&lt;p>On Ubuntu you can fro example say&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ sudo apt install wget
&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ sudo apt install curl
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please find the method that works for your system, or use the default method
which does not require a third party provider.&lt;/p>
&lt;p>The order of the providers is defined as&lt;/p>
&lt;ol>
&lt;li>wget&lt;/li>
&lt;li>curl&lt;/li>
&lt;li>Python requests&lt;/li>
&lt;/ol>
&lt;p>We use wget and curl first as many OS have optimized versions of them.&lt;/p></description></item><item><title>Tutorial: GitHub gh Command Line Interface</title><link>/tutorial/git-gh/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate><guid>/tutorial/git-gh/</guid><description>
&lt;img src="/tutorial/git-gh/featured-image_hu01992e3b0b9fde28c6f5f617d4c1ca8c_222072_640x0_resize_catmullrom_2.png" width="640" height="231"/>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 610px">
&lt;img class="card-img-top" src="/tutorial/git-gh/featured-image_hu01992e3b0b9fde28c6f5f617d4c1ca8c_222072_600x300_fill_catmullrom_smart1_2.png" width="600" height="300">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>Figure 1: GitHub Command gh.&lt;/p>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>GitHub provides an extended gh commandline tool that allow easy interaction of
forking repositories directly from github. IT also provides additional fimctionality
to interact with other advanced features that are typically not provided in the git command tool.&lt;/p>
&lt;p>&lt;strong>Learning Objectives&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Learn how to install the gh command&lt;/li>
&lt;li>Learn how to use the gh command&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Topics covered&lt;/strong>&lt;/p>
&lt;div class="toc">
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#1-introduction">1. Introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="#2-installing-github-gh-command">2. Installing GitHub gh command&lt;/a>&lt;/li>
&lt;li>&lt;a href="#3-logging-in-with-github-gh-command">3. Logging in with GitHub gh Command&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#31-adding-additional-keys">3.1 Adding Additional Keys&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#4-forking">4. Forking&lt;/a>&lt;/li>
&lt;li>&lt;a href="#5-pull-requests">5. Pull Requests&lt;/a>&lt;/li>
&lt;li>&lt;a href="#6-managing-issues-with-github-gh-command">6. Managing Issues with GitHub gh Command&lt;/a>&lt;/li>
&lt;li>&lt;a href="#7-manual-pages">7. Manual Pages&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#71-gh">7.1 gh&lt;/a>&lt;/li>
&lt;li>&lt;a href="#72-list-of-man-pages">7.2 List of Man Pages&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#7-conclusion">7. Conclusion&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/div>
&lt;/div>
&lt;h2 id="1-introduction">1. Introduction&lt;/h2>
&lt;p>The new GitHub &lt;code>gh&lt;/code> command allows GitHub users to work from the terminal of
their machine without having to visit the web browser GUI to manage things like
issues, PRs, and forking. We will show you what features it provides and how to
use it. The &lt;code>gh&lt;/code> command provides useful features that is not provided by the `git
commandline tool.&lt;/p>
&lt;h2 id="2-installing-github-gh-command">2. Installing GitHub gh command&lt;/h2>
&lt;p>Visit the GitHub CLI homepage at &lt;a href="https://cli.github.com/">https://cli.github.com/&lt;/a> for installation
instructions. We recommend that you check out the source distribution because
We found that whne we did this tutorial not all features were included in the
brew instalation. We assume ths will cahnge over time and you may soon be able
to just use the bre install on LInux and MacOs.&lt;/p>
&lt;p>On mac, you can use the following command with
&lt;a href="https://brew.sh/">Brew&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">brew install gh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For Windows useser, please follow the install instructions fro Winodws.&lt;/p>
&lt;h2 id="3-logging-in-with-github-gh-command">3. Logging in with GitHub gh Command&lt;/h2>
&lt;p>It is best practice to be using SSH-keys with GitHub. Create one if you have
not already with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ssh-keygen
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We recommend t use the the default location.&lt;/p>
&lt;p>To authenticate with the GitHub &lt;code>gh&lt;/code> comamand, run the following command. We have included
the answers to the interactive prompts used for this guide.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh auth login
What account &lt;span style="color:#204a87;font-weight:bold">do&lt;/span> you want to log into? GitHub.com
? What account &lt;span style="color:#204a87;font-weight:bold">do&lt;/span> you want to log into? GitHub.com
? What is your preferred protocol &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> Git operations? SSH
? Upload your SSH public key to your GitHub account? ~/.ssh/id_rsa.pub
? How would you like to authenticate GitHub CLI? Login with a web browser
! First copy your one-time code: 1234-1A11
- Press Enter to open github.com in your browser...
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="31-adding-additional-keys">3.1 Adding Additional Keys&lt;/h3>
&lt;p>IN acse you work with multiple computers it is advisable to add your keys from these
machines also. We demonstarte the interaction to upload the key from a new machine.&lt;/p>
&lt;pre>&lt;code>newmachine$ gh ssh-key add ~/.ssh/id_rsa.pub
Error: insufficient OAuth scopes to list SSH keys
Run the following to grant scopes: gh auth refresh -s write:public_key
newmachine$ gh auth refresh -s write:public_key
! First copy your one-time code: 4C2D-E896
- Press Enter to open github.com in your browser...
âœ“ Authentication complete. Press Enter to continue...
newmachine$ gh ssh-key add ~/.ssh/id_rsa.pub
âœ“ Public key added to your account
&lt;/code>&lt;/pre>&lt;h2 id="4-forking">4. Forking&lt;/h2>
&lt;p>We can easily create a fork of a repo with the following:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh repo fork
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is useful for when you do not have write access to the original repository.&lt;/p>
&lt;h2 id="5-pull-requests">5. Pull Requests&lt;/h2>
&lt;p>We can create a pull request easily as follows from a git repo:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh pr create
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The command above will ask the user where to push the branch (if it does not
already exist on the remote). It will also offer the option to fork the initial
repository. You will want to do this if you do not have write access to the
original repo.&lt;/p>
&lt;p>Once created, you may view the status of the PR with the following:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh pr status
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reviewers can checkout your pull request to verify changes as follows:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh pr checkout &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>PR NUMBER&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The reviewer can then approve the PR as follows:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh pr review --approve
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Subsequently, the PR can be merged as follows:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh pr merge &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>PR NUMBER&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You may also list all pull requests with the following:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh pr list
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, PRs can be closed with&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh pr close &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>PR NUMBER&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-managing-issues-with-github-gh-command">6. Managing Issues with GitHub gh Command&lt;/h2>
&lt;p>To create an issue, call the following:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh issue create --title&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Bug 1&amp;#34;&lt;/span> --body&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;description&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can also check the status of issues relevant to use with:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh issue status
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively, we may list all open issues.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh issue list
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, we may close issues with:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gh issue close &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>ISSUE NUMBER&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7-manual-pages">7. Manual Pages&lt;/h2>
&lt;h3 id="71-gh">7.1 gh&lt;/h3>
&lt;pre>&lt;code>gh(1) gh(1)
NAME
gh - GitHub CLI
SYNOPSIS
gh [flags]
DESCRIPTION
Work seamlessly with GitHub from the command line.
OPTIONS
--help[=false] Show help for command
--version[=false] Show gh version
EXAMPLE
$ gh issue create
$ gh repo clone cli/cli
$ gh pr checkout 321
SEE ALSO
gh-alias(1), gh-api(1), gh-auth(1), gh-completion(1), gh-config(1),
gh-gist(1), gh-issue(1), gh-pr(1), gh-release(1), gh-repo(1),
gh-secret(1), gh-ssh-key(1)
&lt;/code>&lt;/pre>&lt;h3 id="72-list-of-man-pages">7.2 List of Man Pages&lt;/h3>
&lt;p>Tha manual pages are published at the &lt;a href="https://cli.github.com/manual/">gh manual&lt;/a>.
For mor information you can also use the man command. A full list of manual pages includes:&lt;/p>
&lt;ul>
&lt;li>gh&lt;/li>
&lt;li>gh-alias-delete&lt;/li>
&lt;li>gh-alias-list&lt;/li>
&lt;li>gh-alias-set&lt;/li>
&lt;li>gh-alias&lt;/li>
&lt;li>gh-api&lt;/li>
&lt;li>gh-auth-login&lt;/li>
&lt;li>gh-auth-logout&lt;/li>
&lt;li>gh-auth-refresh&lt;/li>
&lt;li>gh-auth-status&lt;/li>
&lt;li>gh-auth&lt;/li>
&lt;li>gh-completion&lt;/li>
&lt;li>gh-config-get&lt;/li>
&lt;li>gh-config-set&lt;/li>
&lt;li>gh-config&lt;/li>
&lt;li>gh-gist-clone&lt;/li>
&lt;li>gh-gist-create&lt;/li>
&lt;li>gh-gist-delete&lt;/li>
&lt;li>gh-gist-edit&lt;/li>
&lt;li>gh-gist-list&lt;/li>
&lt;li>gh-gist-view&lt;/li>
&lt;li>gh-gist&lt;/li>
&lt;li>gh-issue-close&lt;/li>
&lt;li>gh-issue-comment&lt;/li>
&lt;li>gh-issue-create&lt;/li>
&lt;li>gh-issue-delete&lt;/li>
&lt;li>gh-issue-edit&lt;/li>
&lt;li>gh-issue-list&lt;/li>
&lt;li>gh-issue-reopen&lt;/li>
&lt;li>gh-issue-status&lt;/li>
&lt;li>gh-issue-view&lt;/li>
&lt;li>gh-issue&lt;/li>
&lt;li>gh-pr-checkout&lt;/li>
&lt;li>gh-pr-checks&lt;/li>
&lt;li>gh-pr-close&lt;/li>
&lt;li>gh-pr-comment&lt;/li>
&lt;li>gh-pr-create&lt;/li>
&lt;li>gh-pr-diff&lt;/li>
&lt;li>gh-pr-edit&lt;/li>
&lt;li>gh-pr-list&lt;/li>
&lt;li>gh-pr-merge&lt;/li>
&lt;li>gh-pr-ready&lt;/li>
&lt;li>gh-pr-reopen&lt;/li>
&lt;li>gh-pr-review&lt;/li>
&lt;li>gh-pr-status&lt;/li>
&lt;li>gh-pr-view&lt;/li>
&lt;li>gh-pr&lt;/li>
&lt;li>gh-release-create&lt;/li>
&lt;li>gh-release-delete&lt;/li>
&lt;li>gh-release-download&lt;/li>
&lt;li>gh-release-list&lt;/li>
&lt;li>gh-release-upload&lt;/li>
&lt;li>gh-release-view&lt;/li>
&lt;li>gh-release&lt;/li>
&lt;li>gh-repo-clone&lt;/li>
&lt;li>gh-repo-create&lt;/li>
&lt;li>gh-repo-fork&lt;/li>
&lt;li>gh-repo-view&lt;/li>
&lt;li>gh-repo&lt;/li>
&lt;li>gh-secret-list&lt;/li>
&lt;li>gh-secret-remove&lt;/li>
&lt;li>gh-secret-set&lt;/li>
&lt;li>gh-secret&lt;/li>
&lt;li>gh-ssh-key-add&lt;/li>
&lt;li>gh-ssh-key-list&lt;/li>
&lt;li>gh-ssh-key&lt;/li>
&lt;/ul>
&lt;h2 id="7-conclusion">7. Conclusion&lt;/h2>
&lt;p>There are many other commands for the GitHub CLI that can be found in the
&lt;a href="https://cli.github.com/manual/">gh manual&lt;/a>, however we only include a select
number of relevant commands for this guide. The commands mentioned above serve
to familiarize the user with the GitHub CLI while also providing practical
usage.&lt;/p></description></item><item><title>Tutorial: GitHub hid Repository</title><link>/tutorial/git-hid-repo/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate><guid>/tutorial/git-hid-repo/</guid><description>
&lt;img src="/tutorial/git-hid-repo/featured-image_hu699bad2f39bda78a6f8b2a2be30d8f74_224192_640x0_resize_catmullrom_2.png" width="640" height="505"/>
&lt;div class="card rounded p-2 td-post-card mb-4 mt-4" style="max-width: 610px">
&lt;img class="card-img-top" src="/tutorial/git-hid-repo/featured-image_hu699bad2f39bda78a6f8b2a2be30d8f74_224192_600x300_fill_catmullrom_smart1_2.png" width="600" height="300">
&lt;div class="card-body px-0 pt-2 pb-0">
&lt;p class="card-text">
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>Figure 1: GitHub hid directory.&lt;/p>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>To contribute to our open source projects we provide you with a Git
repository in which you conduct your activities.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/cybertraining-dsc">https://github.com/cybertraining-dsc&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Learning Objectives&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Learn how to cone the repo&lt;/li>
&lt;li>Learn how to use the rego&lt;/li>
&lt;li>Learn how to commit and push changes to GitHub&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Topics covered&lt;/strong>&lt;/p>
&lt;div class="toc">
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#1-introduction">1. Introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="#2-prerequisites">2. Prerequisites&lt;/a>&lt;/li>
&lt;li>&lt;a href="#3-setting-up-the-ssh-key">3. Setting up the ssh-key&lt;/a>&lt;/li>
&lt;li>&lt;a href="#4-simplify-the-tutorial-while-using-shell-variables">4. Simplify the Tutorial while using Shell Variables&lt;/a>&lt;/li>
&lt;li>&lt;a href="#5-cloning-the-repository">5. Cloning the Repository&lt;/a>&lt;/li>
&lt;li>&lt;a href="#6-commit-changes-locally">6. Commit Changes Locally&lt;/a>&lt;/li>
&lt;li>&lt;a href="#7-adding-files">7. Adding Files&lt;/a>&lt;/li>
&lt;li>&lt;a href="#8-push-the-commits-to-github">8. Push the commits to GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a href="#8-pulling-changes">8. Pulling Changes&lt;/a>&lt;/li>
&lt;li>&lt;a href="#7-conclusion">7. Conclusion&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/div>
&lt;/div>
&lt;h2 id="1-introduction">1. Introduction&lt;/h2>
&lt;p>As part of our open source activities, you will be given a GitHub
repository.
To contribute to our open source projects we provide you with a Git
repository in which you conduct your activities.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/cybertraining-dsc">https://github.com/cybertraining-dsc&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>We will explain how you use them from the command line.&lt;/p>
&lt;h2 id="2-prerequisites">2. Prerequisites&lt;/h2>
&lt;ul>
&lt;li>On macOS we assume you have x-code installed which comes with the git command&lt;/li>
&lt;li>line tools On Windows we assume you have gitbash installed and use git&lt;/li>
&lt;li>through gitbash. Alternatively, you can use multipass, or WSL2 On Linux, make&lt;/li>
&lt;li>sure you have the git command line tools installed.&lt;/li>
&lt;/ul>
&lt;h2 id="3-setting-up-the-ssh-key">3. Setting up the ssh-key&lt;/h2>
&lt;p>In case you have not yet set up an ssh key, you can do this with the command.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ssh-keygen
&lt;/code>&lt;/pre>&lt;/div>&lt;p>YOu will be asked for the default location, accept it. After that, you will be
asked for a passphrase. Please choose one and make sure you do not make it
empty. Often you find wrong tutorials or guidance by others that say you can
leave it empty. DO NOT FOLLOW THEIR WRONG ADVICE.&lt;/p>
&lt;p>Upload the content of the file&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ cat ~/.ssh/id_rsa.pub
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Into the GitHub portal at &lt;a href="https://github.com/settings/keys">https://github.com/settings/keys&lt;/a>.
You will then use the SSH key to authenticate to GitHub.
To not always have to type in the password you can use &lt;code>ssh-keychain&lt;/code>.
On Mac OS you can simply use the command&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ssh-add
&lt;/code>&lt;/pre>&lt;/div>&lt;p>and enter your password&lt;/p>
&lt;h2 id="4-simplify-the-tutorial-while-using-shell-variables">4. Simplify the Tutorial while using Shell Variables&lt;/h2>
&lt;p>To simplify the tutorial we use from here on two shell variables. The first is
&lt;code>HID&lt;/code> which specifies the name of your GitHub repository as found in&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/cybertraining-dsc">https://github.com/cybertraining-dsc&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In our case, we use &lt;code>hid-example&lt;/code>. The second variable is the name/path of the
editor in which we edit commit messages for git.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ &lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">HID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>hid-example
$ &lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">EDITOR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>emacs
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-cloning-the-repository">5. Cloning the Repository&lt;/h2>
&lt;p>Let us now clone the repository, change int the checked out repository
and edit the project file.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ git clone git@github.com:cybertraining-dsc/&lt;span style="color:#000">$HID&lt;/span>.git
$ &lt;span style="color:#204a87">cd&lt;/span> &lt;span style="color:#000">$HID&lt;/span>/project
$ &lt;span style="color:#000">$EDITOR&lt;/span> index.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now let us make a modification and save the file locally.&lt;/p>
&lt;h2 id="6-commit-changes-locally">6. Commit Changes Locally&lt;/h2>
&lt;p>To commit the changes locally, you use the following command. Make sure to
put a commit message and specify the filename.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ git commit -m &lt;span style="color:#4e9a06">&amp;#34;Improved document with this and that&amp;#34;&lt;/span> index.md
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7-adding-files">7. Adding Files&lt;/h2>
&lt;p>To add new files you can simply use the add command and use the commit command
after it.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ git add image/newimage.png
$ git commit -m &lt;span style="color:#4e9a06">&amp;#34;Improved document with this and that&amp;#34;&lt;/span> image/newimage.png
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="8-push-the-commits-to-github">8. Push the commits to GitHub&lt;/h2>
&lt;p>GitHub as you know is a service that stores your files once you push them from
your local commits to GitHub. To push the commits use the command&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ git push
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="8-pulling-changes">8. Pulling Changes&lt;/h2>
&lt;p>GitHub shines when you work with multiple people together on your projects. This
may be project partners or feedbacks that are placed in your documents by us.
Thus, it is important that you state in synchronization with the files in
GitHub. Do this use the command&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ git pull
&lt;/code>&lt;/pre>&lt;/div>&lt;p>in any directory of the repository that you have checked out. It will update
any file that has changed. In case of a conflict, your file will include a
text such as&lt;/p>
&lt;pre>&lt;code>&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
This is the new text from you
=======
This is the text in the repo
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/code>&lt;/pre>&lt;p>You will have to remove the text between the &amp;laquo;&amp;lt; and &amp;raquo;&amp;gt; and replace it with
the text that is correct. In the simplest case, one of the choices will be
correct. However, you may have in some cases to merge the two versions.&lt;/p>
&lt;p>It is important to pull frequently. It is also important to not just paste and
copy the entire file, but use the command line tools and editor to conduct the
change as not to overwrite other changes.&lt;/p>
&lt;h2 id="7-conclusion">7. Conclusion&lt;/h2>
&lt;p>The use of git from the command line is straightforward for existing
repositories. It is easy to do. Make sure to create an &lt;code>ssh-key&lt;/code> and start in
synchronization with frequent pulls.&lt;/p></description></item></channel></rss>